##############################
## saveusb Wait 60min.
## #19148 USBメモリにnolimitファイルが存在するときsaveusbのタイマーを無しにする
## BKUPプロセスが/tmp/saveusb/saveusb.txtを削除出来ず
## アンマウントできなくなる場合の対策
lop=3600

# saveusb終了の待ち合わせ時間を設定する
if [ -f ${NO_LIMIT} ]
then
	# 空ファイルなら無制限でsaveusbの終了を待ち合わせる
	TMPTIME=`cat ${NO_LIMIT} | head -n 1 | awk '{print $1}'`
	if [ "x${TMPTIME}" == "x" ]
	then
#		echo "@@@DBG 待ち合わせ時間を無制限にセット"
		lop=x
	else
		# 待ち合わせ時間(秒)が書かれていれば待ち合わせ時間をセットする
		CHECK_NUM=`echo ${TMPTIME} | awk '/[^0-9]/ {print}'`
#		echo "@@@DBG TMPTIME=${TMPTIME} CHECK_NUM=${CHECK_NUM}"
		if [ "x${CHECK_NUM}" == "x" ]
		then
			# 数字のみのだったのでデフォルト値より大きいかチェックする
			if [ ${TMPTIME} -gt 3600 ]
			then
#				echo "@@@DBG 待ち合わせ時間を${TMPTIME}秒にセット"
				lop=${TMPTIME}
			else
				echo "3600秒よりも大きな値で設定してください"
			fi
		else
			echo "数字以外の文字列があったのでデフォルトで動作する"
		fi
	fi
fi

# saveusbの終了を待ち合わせる
if [ ${lop} == "x" ]
then
	echo "待ち時間無制限でsaveusbの終了を待ち合わせます"
	while [ : ]
	do
#		echo "@@@DBG 無制限"
#		sleep 1
		if [ -f /tmp/saveusb/saveusb.txt ]
		then
			sleep 1
		else
			break;
		fi
	done
else
	echo "待ち時間${lop}秒でsaveusbの終了を待ち合わせます"
	while [ $lop -ne 0 ]
	do
#		echo "@@@DBG 制限時間あり 残り${lop}秒"
#		sleep 1
#		lop=`expr $lop - 1`
		if [ -f /tmp/saveusb/saveusb.txt ]
		then
			sleep 1
			lop=`expr $lop - 1`
		else
			break;
		fi
	done
	if [ $lop -eq 0 ]
	then
		echo "saveusbのタイムアウトが発生しました。"
	fi
fi